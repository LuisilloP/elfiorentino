---
import type { GetStaticPaths } from "astro";
import type { Product } from "../../types/Interfaces.ts";

import Layout from "../../layouts/Layout.astro";
import { dataProducts } from "../../services/getProducts";
import ArrowImage from "../../components/button/ArrowImage.astro";
import LabelCustomize from "../../components/button/LabelCustomize.astro";

const { id } = Astro.params;

const product: Product | undefined = dataProducts.find(
  (p) => p.slug.toString() == id
) as Product | undefined;

if (!product) {
  throw new Error(`Producto no encontrado: ${id}`);
}

export const getStaticPaths = (() => {
  return dataProducts.map((product) => ({
    params: { id: product.slug.toString() }, // Asegúrate de que el ID esté en formato de cadena
  }));
}) satisfies GetStaticPaths;

const { description, price, photos, name, tones } = product;

---

<Layout title={name}>
  <section
    class="pt-40 md:pt-60 px-5 grid lg:grid-cols-2 lg:w-[1200px] min-h-[800px] m-auto gap-9 font-barlow"
  >
    <div
      class="relative overflow-hidden md:w-[30rem] max-h-[27rem] min-h-[27rem]"
    >
      <div
        id="slider"
        class="flex transition-transform duration-300 ease-in-out max-h-[27rem] min-h-[27rem]
      ."
      >
        {
          photos?.urls.map((img: string) => (
            <img
              src={`/productImage/${img}`}
              alt={`image-${name}`}
              class="w-full h-auto rounded object-cover lg:w-[30rem]"
            />
          ))
        }
      </div>
      <ArrowImage direction="left" />
      <ArrowImage direction="right" />
    </div>
    <div>
      <h1 class="text-3xl font-semibold  mb-5 pt-3 text-neutral-800">
        {product.name}
      </h1>
      <p class="text-base text-neutral-500 mt-5">{description}</p>

      <p class=" font-bold text-neutral-700 mt-3">
        Desde ${price.toLocaleString("es-ES")}
      </p>
      <form
        class="flex flex-col gap-5"
        id="productForm"
        onsubmit="return validateForm(event)"
      >
      <input name="Name" value={name} hidden />
      <input name="id" value={id} hidden />
      {
        id=="cocina-personalizada"|| id =="closet-personalizado" ? "" : 
        <div class="grid grid-cols-2 gap-5">
          <LabelCustomize type="number" name="Alto" />
          <LabelCustomize type="number" name="Largo" />
        </div>
        <div class="grid grid-cols-2 gap-5">
          
          <LabelCustomize type="number" name="Ancho" />
          {product.type==true || id =="estante-repisero" || id == "mesones"?id=="comoda-personalizada"?<LabelCustomize type="number" name="Cajones"/>:"":<LabelCustomize type="number" name="Cajones"/>}
          <select
            name="Color"
            required
            class="py-3 px-4 pe-9 block w-full border-gray-200 rounded-lg text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none"
          >
            <option value="" selected>Color</option>
            {
              tones?.colors.map((color: string, i) => (
                <option value={color}>{color}</option>
              ))
            }
          </select>
        </div>
      }
       
        <button
          type="submit"
          class="flex w-[100%] bg-[#25d366] rounded  text-white justify-center items-center mt-5"
        >
          <img class="w-10 h-10" src="/socialmedia/whatsappButton.svg" />
          Cotizar mi producto
        </button>
      </form>
    </div>
  </section>
  <script>
    document.addEventListener("DOMContentLoaded", () => {
      //Slider Imagen
      const slider = document.getElementById("slider")!;
      const prevButton = document.getElementById("prev");
      const nextButton = document.getElementById("next");

      //Contacto WhatsApp
      const form = document.getElementById("productForm");
      const inputs = form?.querySelectorAll("input");
      const select = document.getElementById("tones-select");
      const whatsappButton = document.getElementById("whatsapp-btn");

      if (slider && prevButton && nextButton) {
        let index = 0;
        const totalImages = slider.children.length;

        // Actualiza posicion de slider
        function updateSlider() {
          const offset = -index * 100;
          slider.style.transform = `translateX(${offset}%)`;
        }
        // Click de eventos
        prevButton.addEventListener("click", () => {
          index = index > 0 ? index - 1 : totalImages - 1;
          updateSlider();
        });

        nextButton.addEventListener("click", () => {
          index = index < totalImages - 1 ? index + 1 : 0;
          updateSlider();
        });

        // Swpiper para moviles
        let touchStartX = 0;
        let touchEndX = 0;

        slider.addEventListener("touchstart", (e) => {
          touchStartX = e.changedTouches[0].screenX;
        });

        slider.addEventListener("touchend", (e) => {
          touchEndX = e.changedTouches[0].screenX;
          handleSwipeGesture();
        });

        function handleSwipeGesture() {
          const swipeThreshold = 50;
          if (touchEndX < touchStartX - swipeThreshold) {
            index = index < totalImages - 1 ? index + 1 : 0;
            updateSlider();
          }

          if (touchEndX > touchStartX + swipeThreshold) {
            index = index > 0 ? index - 1 : totalImages - 1;
            updateSlider();
          }
        }
      }
      // Valida form
      form?.addEventListener("submit", (event) => {
        event.preventDefault(); // Evita el envío por defecto
        const formt = event.target;
        if (formt instanceof HTMLFormElement) {
          const formData = new FormData(formt);
          const data = Object.fromEntries(formData.entries());
          data.Name.toString();
          const productName = data.Name.toString()?.replace(
            /[^\p{L}\p{N}\s]/gu,
            ""
          );
          const spects = `con las especificaciones: Alto ${data.Alto}, Largo ${data.Largo}, Ancho ${data.Ancho} ${data.Cajones ? ", Cajones " + data.Cajones : ""}, Color ${data.Color}. `

          const whatsappURL = `https://wa.me/974061736?text=Hola, me interesa el producto ${productName}, 
          ${data.id == "cocina personalizada" || data.id == "closet-personalizado"?``:`${spects}` }
          ¿Podrías darme más información?`;
          window.open(whatsappURL, "_blank");
        }
      });
    });
  </script>
</Layout>
